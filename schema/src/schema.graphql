directive @deprecated(
  reason: String = "No longer supported"
) on FIELD_DEFINITION | ENUM_VALUE

"""
The `Beer` type reprensent a beer object,
agregated from [punk api](https://punkapi.com/documentation/v2)
"""
type Beer {
  id: ID!
  name: String!
  """
  Small Description of the beer
  **small** mean it is a short text
  """
  tagline: String!
  """
  Complete description of the beer.
  If you want a small text, use `tagline`
  """
  description: String!
}

"""
Beer Input to require beers
"""
input BeersInput {
  page: Int!
  pageSize: Int!
}

type User {
  id: ID!
  name: String!
  token: String
  beers: [Beer!]!
}

type Query {
  """
  Request a `Beer` by an ID
  """
  beer(id: ID!): Beer!
  """
  Request a beers collection.
  You need to specify the page and the pageSize of `BeersInput`
  """
  beers(input: BeersInput!): [Beer!]!
  """
  Request users
  """
  users: [User!]!
  """
  Request a user by id
  """
  user(id: ID!): User
  """
  Request the current authentified user.
  Return `null` if the user is not authentified
  """
  me: User
}

type Mutation {
  """
  Register mutation
  """
  register(name: String!): User! @deprecated
  """
  Login mutation.
  If the user does not exist, the user is created
  """
  login(name: String!): User!
  """
  Add a beer in favorites.
  The request need to be authenticated to call this mutation.
  """
  toogleBeerLike(beerId: ID!): User!
}

enum LikeAction {
  like
  dislike
}

type UserLike {
  user: User!
  beer: Beer!
  action: LikeAction!
}

type Subscription {
  """
  Suscribe to users connections to the app.
  Deprecated because the service is deployed on serverless,
  and it does not handle WebSockets.
  """
  userLoggedIn: User! @deprecated
  """
  Suscribe to `like` events.
  Deprecated because the service is deployed on serverless,
  and it does not handle WebSockets.
  """
  userLikedABeer: UserLike! @deprecated
}
